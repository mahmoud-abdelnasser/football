{"ast":null,"code":"var _jsxFileName = \"/home/antaka/antaka/league/src/components/pages/leagues/LeaguesItem.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row, Col, Container } from \"reactstrap\";\nimport _ from \"lodash\";\nimport LeagueCard from \"./LeagueCard\";\nimport logo from \"../../../images/No_Image_Available.png\";\n\nclass LeaguesItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          getLeaguesItem = _this$props.getLeaguesItem,\n          getTeams = _this$props.getTeams;\n    const currentId = this.props.match.params.id; // getLeaguesItem(currentId)\n    // getTeams(currentId)\n\n    Promise.all([getLeaguesItem(currentId), getTeams(currentId)]);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          leaguesItem = _this$props2.leaguesItem,\n          teams = _this$props2.teams;\n    return React.createElement(\"div\", {\n      className: \"page-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: {\n        size: 10,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Football Leagues\"), leaguesItem.loading ? React.createElement(\"i\", {\n      className: \"fas fa-spinner fa-pulse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }) : !_.isEmpty(leaguesItem.payload) ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, leaguesItem.payload.name), React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(LeagueCard, {\n      item: leaguesItem.payload,\n      actions: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))) : \"NOT FOUND : Note that only available ID's are (2000, 2001, 2002, 2003, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021)\", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Teams\"), teams.loading && React.createElement(\"i\", {\n      className: \"fas fa-spinner fa-pulse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"teams-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, teams.payload.count > 0 ? teams.payload.teams.map((value, index) => {\n      return React.createElement(Col, {\n        lg: 3,\n        md: 4,\n        sm: 6,\n        xs: 6,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"team-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"team-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, value.crestUrl ? React.createElement(\"img\", {\n        width: 80,\n        src: value.crestUrl,\n        alt: value.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        className: \"fas fa-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, value.name)));\n    }) : \"no teams\")))))));\n  }\n\n}\n\nexport default LeaguesItem;","map":{"version":3,"sources":["/home/antaka/antaka/league/src/components/pages/leagues/LeaguesItem.js"],"names":["React","Component","Fragment","Row","Col","Container","_","LeagueCard","logo","LeaguesItem","constructor","props","componentDidMount","getLeaguesItem","getTeams","currentId","match","params","id","Promise","all","render","leaguesItem","teams","size","offset","loading","isEmpty","payload","name","count","map","value","index","crestUrl"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Row, Col, Container } from \"reactstrap\";\nimport _ from \"lodash\";\nimport LeagueCard from \"./LeagueCard\";\nimport logo from \"../../../images/No_Image_Available.png\";\n\nclass LeaguesItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    const { getLeaguesItem, getTeams } = this.props;\n    const currentId = this.props.match.params.id;\n\n    // getLeaguesItem(currentId)\n    // getTeams(currentId)\n    Promise.all([getLeaguesItem(currentId), getTeams(currentId)])\n\n  }\n  render() {\n    const { leaguesItem, teams } = this.props;\n    return (\n      <div className=\"page-body\">\n        <div className=\"container\">\n          <Row>\n            <Col md={{ size: 10, offset: 1 }}>\n              <h1>Football Leagues</h1>\n              {leaguesItem.loading ? (\n                <i className=\"fas fa-spinner fa-pulse\" />\n              ) : !_.isEmpty(leaguesItem.payload) ? (\n                <Fragment>\n                  <h2>{leaguesItem.payload.name}</h2>\n                  <div className=\"cards\">\n                    <LeagueCard item={leaguesItem.payload} actions={false} />\n                  </div>\n                </Fragment>\n              ) : (\n                \"NOT FOUND : Note that only available ID's are (2000, 2001, 2002, 2003, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021)\"\n              )}\n              <h2>Teams</h2>\n              {teams.loading && <i className=\"fas fa-spinner fa-pulse\" />}\n              <div className=\"teams-container\">\n                <Container>\n                  <Row>\n                    {teams.payload.count > 0\n                      ? teams.payload.teams.map((value, index) => {\n                          return (\n                            <Col lg={3}  md={4} sm={6} xs={6}key={index}>\n                              <div className=\"team-card\">\n                                <div className=\"team-img\">\n                                  {value.crestUrl ? (\n                                    <img\n                                      width={80}\n                                      src={value.crestUrl}\n                                      alt={value.name}\n                                    />\n                                  ) : (\n                                    <i className=\"fas fa-image\" />\n                                  )}\n                                </div>\n                                <p>{value.name}</p>\n                              </div>\n                            </Col>\n                          );\n                        })\n                      : \"no teams\"}\n                  </Row>\n                </Container>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeaguesItem;\n"]},"metadata":{},"sourceType":"module"}