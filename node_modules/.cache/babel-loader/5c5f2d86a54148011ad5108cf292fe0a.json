{"ast":null,"code":"var _jsxFileName = \"/home/antaka/antaka/league/src/components/pages/leagues/LeaguesItem.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport _ from \"lodash\";\nimport LeagueCard from \"./LeagueCard\";\n\nclass LeaguesItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          getLeaguesItem = _this$props.getLeaguesItem,\n          getTeams = _this$props.getTeams;\n    const currentId = this.props.match.params.id; // getLeaguesItem(currentId)\n    // getTeams(currentId)\n\n    Promise.all([getLeaguesItem(currentId), getTeams(currentId)]).then(([leaguesItem, teams]) => {\n      console.log('leaguesItem', leaguesItem);\n      console.log('teams', teams);\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          leaguesItem = _this$props2.leaguesItem,\n          teams = _this$props2.teams;\n    return React.createElement(\"div\", {\n      className: \"page-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: {\n        size: 10,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Football Leagues\"), leaguesItem.loading ? React.createElement(\"i\", {\n      className: \"fas fa-spinner fa-pulse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : !_.isEmpty(leaguesItem.payload) ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, leaguesItem.payload.name), React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(LeagueCard, {\n      item: leaguesItem.payload,\n      actions: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))) : \"NOT FOUND : Note that only available ID's are (2000, 2001, 2002, 2003, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021)\", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Teams\"), teams.loading && React.createElement(\"i\", {\n      className: \"fas fa-spinner fa-pulse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"teams-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, teams.payload.count > 0 ? teams.payload.teams.map((value, index) => {\n      return React.createElement(Col, {\n        md: 3,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, value.crestUrl ? React.createElement(\"img\", {\n        width: 80,\n        src: value.crestUrl,\n        title: value.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        className: \"fas fa-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, value.name)));\n    }) : \"no teams\"))))));\n  }\n\n}\n\nexport default LeaguesItem;","map":{"version":3,"sources":["/home/antaka/antaka/league/src/components/pages/leagues/LeaguesItem.js"],"names":["React","Component","Fragment","Row","Col","_","LeagueCard","LeaguesItem","constructor","props","componentDidMount","getLeaguesItem","getTeams","currentId","match","params","id","Promise","all","then","leaguesItem","teams","console","log","catch","error","render","size","offset","loading","isEmpty","payload","name","count","map","value","index","crestUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAClCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAAA,wBACkB,KAAKD,KADvB;AAAA,UACXE,cADW,eACXA,cADW;AAAA,UACMC,QADN,eACMA,QADN;AAElB,UAAMC,SAAS,GAAG,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1C,CAFkB,CAIlB;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACP,cAAc,CAACE,SAAD,CAAf,EAA2BD,QAAQ,CAACC,SAAD,CAAnC,CAAZ,EACCM,IADD,CACM,CAAC,CAACC,WAAD,EAAeC,KAAf,CAAD,KAAyB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,WAA3B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,KAJD,EAKCG,KALD,CAKQC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAsBE,KAAtB;AACD,KAPD;AASD;;AACDC,EAAAA,MAAM,GAAG;AAAA,yBACwB,KAAKjB,KAD7B;AAAA,UACCW,WADD,gBACCA,WADD;AAAA,UACcC,KADd,gBACcA,KADd;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEM,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGR,WAAW,CAACS,OAAZ,GACC;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEG,CAACxB,CAAC,CAACyB,OAAF,CAAUV,WAAW,CAACW,OAAtB,CAAD,GACF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,WAAW,CAACW,OAAZ,CAAoBC,IAAzB,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEZ,WAAW,CAACW,OAA9B;AAAuC,MAAA,OAAO,EAAE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADE,GAQF,wHAZJ,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,EAeGV,KAAK,CAACQ,OAAN,IAAiB;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfpB,EAgBE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,KAAK,CAACU,OAAN,CAAcE,KAAd,GAAsB,CAAtB,GACGZ,KAAK,CAACU,OAAN,CAAcV,KAAd,CAAoBa,GAApB,CAAwB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACxC,aACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,GAAG,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACE,QAAN,GACC;AAAK,QAAA,KAAK,EAAE,EAAZ;AAAgB,QAAA,GAAG,EAAEF,KAAK,CAACE,QAA3B;AAAqC,QAAA,KAAK,EAAEF,KAAK,CAACH,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIG,KAAK,CAACH,IAAV,CANF,CADF,CADF;AAYD,KAbD,CADH,GAeG,UAhBN,CADA,CAhBF,CADF,CADF,CADF,CADF;AA6CD;;AAnEiC;;AAsEpC,eAAezB,WAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport _ from \"lodash\";\nimport LeagueCard from \"./LeagueCard\";\n\nclass LeaguesItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    const {getLeaguesItem , getTeams} = this.props;\n    const currentId = this.props.match.params.id;\n\n    // getLeaguesItem(currentId)\n    // getTeams(currentId)\n    Promise.all([getLeaguesItem(currentId),getTeams(currentId)])\n    .then(([leaguesItem , teams])=>{\n      console.log('leaguesItem', leaguesItem)\n      console.log('teams', teams)\n    })\n    .catch((error) => {\n      console.log('error' , error)\n    })\n    \n  }\n  render() {\n    const { leaguesItem, teams } = this.props;\n    return (\n      <div className=\"page-body\">\n        <div className=\"container\">\n          <Row>\n            <Col md={{ size: 10, offset: 1 }}>\n              <h1>Football Leagues</h1>\n              {leaguesItem.loading ? (\n                <i className=\"fas fa-spinner fa-pulse\" />\n              ) : !_.isEmpty(leaguesItem.payload) ? (\n                <Fragment>\n                  <h2>{leaguesItem.payload.name}</h2>\n                  <div className=\"cards\">\n                    <LeagueCard item={leaguesItem.payload} actions={false} />\n                  </div>\n                </Fragment>\n              ) : (\n                \"NOT FOUND : Note that only available ID's are (2000, 2001, 2002, 2003, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021)\"\n              )}\n              <h2>Teams</h2>\n              {teams.loading && <i className=\"fas fa-spinner fa-pulse\" />}\n              <div className=\"teams-container\">\n              <Row>\n                {teams.payload.count > 0\n                  ? teams.payload.teams.map((value, index) => {\n                      return (\n                        <Col md={3} key={index}>\n                          <div>\n                            {value.crestUrl ? (\n                              <img width={80} src={value.crestUrl} title={value.name} />\n                            ) : (\n                              <i className=\"fas fa-image\" />\n                            )}\n                            <p>{value.name}</p>\n                          </div>\n                        </Col>\n                      );\n                    })\n                  : \"no teams\"}\n                  </Row>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeaguesItem;\n"]},"metadata":{},"sourceType":"module"}