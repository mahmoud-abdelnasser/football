{"ast":null,"code":"import { leaguesService } from \"../services/leagues\";\nimport { alertActions } from \"./alert\";\nexport const GET_COMPETITIONS_REQUEST = \"GET_COMPETITIONS_REQUEST\";\nexport const GET_COMPETITIONS_SUCCESS = \"GET_COMPETITIONS_SUCCESS\";\nexport const GET_COMPETITIONS_FAILED = \"GET_COMPETITIONS_FAILED\";\nexport const GET_LEAGUES_ITEM_REQUEST = \"GET_LEAGUES_ITEM_REQUEST\";\nexport const GET_LEAGUES_ITEM_SUCCESS = \"GET_LEAGUES_ITEM_SUCCESS\";\nexport const GET_LEAGUES_ITEM_FAILED = \"GET_LEAGUES_ITEM_FAILED\";\n/*---- GET ALL COMPETITIONS ------*/\n\nconst getCompetitionsStart = () => {\n  return {\n    type: GET_COMPETITIONS_REQUEST\n  };\n};\n\nconst getCompetitionsSuccess = data => {\n  return {\n    type: GET_COMPETITIONS_SUCCESS,\n    data\n  };\n};\n\nconst getCompetitionsFailed = error => {\n  return {\n    type: GET_COMPETITIONS_FAILED,\n    error: error.message\n  };\n};\n\nfunction getCompetitions(data) {\n  return dispatch => {\n    dispatch(getCompetitionsStart());\n    leaguesService.getCompetitions(data).then(response => {\n      const competitions = response.data;\n      dispatch(getCompetitionsSuccess(competitions));\n      dispatch(alertActions.success(\"Competitions loaded successfully\"));\n      setTimeout(() => {\n        dispatch(alertActions.clear());\n      }, 0.5e4);\n    }).catch(error => {\n      dispatch(getCompetitionsFailed(error));\n      dispatch(alertActions.error(error));\n      setTimeout(() => {\n        dispatch(alertActions.clear());\n      }, 0.5e4);\n    });\n  };\n}\n/*---- GET LEAGUE ITEM BY ID ------*/\n\n\nconst getLeaguesItemStart = () => {\n  return {\n    type: GET_LEAGUES_ITEM_REQUEST\n  };\n};\n\nconst getLeaguesItemSuccess = data => {\n  return {\n    type: GET_LEAGUES_ITEM_SUCCESS,\n    data\n  };\n};\n\nconst getLeaguesItemFailed = error => {\n  return {\n    type: GET_LEAGUES_ITEM_FAILED,\n    error\n  };\n};\n\nfunction getLeaguesItem(id) {\n  return dispatch => {\n    dispatch(getLeaguesItemStart());\n    leaguesService.getLeaguesItem(id).then(response => {\n      const competitions = response.data;\n      dispatch(getLeaguesItemSuccess(competitions));\n      dispatch(alertActions.success(\"League loaded successfully\"));\n      setTimeout(() => {\n        dispatch(alertActions.clear());\n      }, 0.5e4);\n    }).catch(error => {\n      dispatch(getLeaguesItemFailed(error));\n      dispatch(alertActions.error(error.message));\n      setTimeout(() => {\n        dispatch(alertActions.clear());\n      }, 0.5e4);\n    });\n  };\n}\n\nexport const leaguesActions = {\n  getCompetitions,\n  getLeaguesItem\n};","map":{"version":3,"sources":["/home/antaka/antaka/league/src/actions/leagues.js"],"names":["leaguesService","alertActions","GET_COMPETITIONS_REQUEST","GET_COMPETITIONS_SUCCESS","GET_COMPETITIONS_FAILED","GET_LEAGUES_ITEM_REQUEST","GET_LEAGUES_ITEM_SUCCESS","GET_LEAGUES_ITEM_FAILED","getCompetitionsStart","type","getCompetitionsSuccess","data","getCompetitionsFailed","error","message","getCompetitions","dispatch","then","response","competitions","success","setTimeout","clear","catch","getLeaguesItemStart","getLeaguesItemSuccess","getLeaguesItemFailed","getLeaguesItem","id","leaguesActions"],"mappings":"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","sourcesContent":["import { leaguesService } from \"../services/leagues\";\nimport { alertActions } from \"./alert\";\n\nexport const GET_COMPETITIONS_REQUEST = \"GET_COMPETITIONS_REQUEST\";\nexport const GET_COMPETITIONS_SUCCESS = \"GET_COMPETITIONS_SUCCESS\";\nexport const GET_COMPETITIONS_FAILED = \"GET_COMPETITIONS_FAILED\";\n\nexport const GET_LEAGUES_ITEM_REQUEST = \"GET_LEAGUES_ITEM_REQUEST\";\nexport const GET_LEAGUES_ITEM_SUCCESS = \"GET_LEAGUES_ITEM_SUCCESS\";\nexport const GET_LEAGUES_ITEM_FAILED = \"GET_LEAGUES_ITEM_FAILED\";\n\n\n/*---- GET ALL COMPETITIONS ------*/\n\nconst getCompetitionsStart = () => {\n  return {\n    type: GET_COMPETITIONS_REQUEST\n  };\n};\nconst getCompetitionsSuccess = data => {\n  return {\n    type: GET_COMPETITIONS_SUCCESS,\n    data\n  };\n};\n\nconst getCompetitionsFailed = error =>{\n  return {\n    type: GET_COMPETITIONS_FAILED,\n    error:error.message\n  }\n}\n\n\nfunction getCompetitions(data) {\n  return dispatch => {\n    dispatch(getCompetitionsStart());\n    leaguesService\n      .getCompetitions(data)\n      .then(response => {\n        const competitions = response.data;\n        dispatch(getCompetitionsSuccess(competitions));\n        dispatch(alertActions.success(\"Competitions loaded successfully\"));\n        setTimeout(() => {\n          dispatch(alertActions.clear());\n        }, 0.5e4);\n      })\n      .catch(error => {\n        dispatch(getCompetitionsFailed(error));\n        dispatch(alertActions.error(error));\n        setTimeout(() => {\n          dispatch(alertActions.clear());\n        }, 0.5e4);\n      });\n  };\n}\n\n/*---- GET LEAGUE ITEM BY ID ------*/\n\nconst getLeaguesItemStart = () => {\n  return {\n    type: GET_LEAGUES_ITEM_REQUEST\n  };\n};\nconst getLeaguesItemSuccess = data => {\n  return {\n    type: GET_LEAGUES_ITEM_SUCCESS,\n    data\n  };\n};\n\nconst getLeaguesItemFailed = error =>{\n  return {\n    type: GET_LEAGUES_ITEM_FAILED,\n    error\n  }\n}\n\nfunction getLeaguesItem(id){\n  return dispatch => {\n    dispatch(getLeaguesItemStart());\n    leaguesService\n      .getLeaguesItem(id)\n      .then(response => {\n        const competitions = response.data;\n        dispatch(getLeaguesItemSuccess(competitions));\n        dispatch(alertActions.success(\"League loaded successfully\"));\n        setTimeout(() => {\n          dispatch(alertActions.clear());\n        }, 0.5e4);\n      })\n      .catch(error => {\n        dispatch(getLeaguesItemFailed(error));\n        dispatch(alertActions.error(error.message));\n        setTimeout(() => {\n          dispatch(alertActions.clear());\n        }, 0.5e4);\n      });\n  };\n}\n\n\n\nexport const leaguesActions = {\n  getCompetitions,\n  getLeaguesItem\n};\n"]},"metadata":{},"sourceType":"module"}